global:
  # Labels to apply to all resources.
  # Please note that this does not add labels to the resources created dynamically by the controllers.
  # For these resources, you have to add the labels in the template in the cert-manager custom resource:
  commonLabels: {}
  commonAnnotations: {}

# If the chart instance should be created
enabled: true
managementProjectName: k3s-management-project

# Argocd App Projects
tenantProject:
  # Project the tenant resources will be deployed in
  name: k3s-tenant-test-project
  destinationServer: https://kubernetes.default.svc

  # List of source repositories for this project
  sourceRepos:
    - "*"
  namespaces:
  # It is not recommended to allow all namespaces, specify only the needed ones
    - "test-namespace"

  # List of cluster resource whitelists for this project
  # By default allows no cluster scoped resources
  clusterResourceWhitelist: []
    # - group: "*"
    #   kind: "*"

  # List of namespace resource whitelists for this project
  namespaceResourceWhitelist: []
    # - group: "" 
    #   kind: Namespace

  roles: {}
    # A role which provides read-only access to all applications in the project
    # - name: read-only
    #   description: Read-only privileges to {{ .Values.tenantProject.name }}
    #   policies:
    #   - p, proj:{{ .Values.tenantProject.name }}:read-only, applications, get, {{ .Values.tenantProject.name }}/*, allow
    #   # groups:
    #   # - my-oidc-group

    # # A role which provides sync privileges to only the guestbook-dev application, e.g. to provide
    # # sync privileges to a CI system
    # - name: ci-role
    #   description: Sync privileges for {{ .Values.tenantProject.name }}
    #   policies:
    #   - p, proj:{{ .Values.tenantProject.name }}:ci-role, applications, sync, {{ .Values.tenantProject.name }}/guestbook-dev, allow

  # Sync windows restrict when Applications may be synced. https://argo-cd.readthedocs.io/en/stable/user-guide/sync_windows/
  syncWindows: {}
  # - kind: allow
  #   schedule: '10 1 * * *'
  #   duration: 1h
  #   applications:
  #     - '*-prod'

limits:
  enabled: true
  # Specification of the limitRange resource
  # This is per pod and per container, for overall limits use quota
  rules: |
    limits:
      - type: "Pod"
        max:
          cpu: 200m
          memory: 256Mi
      - type: "Container"
        max:
          cpu: 100m
          memory: 128Mi

quota:
  enabled: true
  # Specification of the quotas resource
  rules: |
    hard:
      limits.cpu: "2000m"
      limits.memory: "8192Mi"
      # requests.cpu: "400m"
      # requests.memory: "512Mi"
      persistentvolumeclaims: "0"
      # longhorn.storageclass.storage.k8s.io/requests.storage: "1Gi"
      # pods: "4"
      # services: "2"

# networkPolicy:
#   enabled: false
#   # Isolate the tenant namespace from the rest of the cluster
#   isolateTenant: 
#     enabled: true
#     ingress:
#       allow: true
#       serviceName: traefik
#     monitoring:
#       allow: true
#       namespace: monitoring

#   additionalRules:
#   # allow from external
#   - id: allow-from-openshift-ingress
#     # Specifications of this policy rule
#     spec: |
#       ingress:
#       - from:
#           - namespaceSelector:
#               matchLabels:
#                 network.openshift.io/policy-group: ingress
#       podSelector: {}
#       policyTypes:
#       - Ingress
#   # # allow from internal
#   - id: allow-from-same-namespace
#     # Specifications of this policy rule
#     spec: |
#       podSelector: {}
#       ingress:
#       - from:
#         - podSelector: {}

gitopsApplication:
  enabled: true
  # Dont forget to add the gitops url to the allowed sources for the tenant project
  repoURL: "https://github.com/my-org/my-repo.git"
  targetRevision: HEAD
  path: applications

  syncPolicy:
    enabled: true
    prune: true
    selfHeal: true
